{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamil\\\\Documents\\\\GitHub\\\\LepszyUPEL\\\\src\\\\IncomingGroupTests.js\";\nimport { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"./hooks/useAxiosPrivate\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport React from \"react\";\nimport { Box, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Tooltip } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport updateLocale from \"dayjs/plugin/updateLocale\";\nfunction ConvertTime(date) {\n  var formatter = new Intl.DateTimeFormat(\"pl\", {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  });\n  return formatter.format(date);\n}\nfunction createData(obj) {\n  const name = obj.name;\n  const time = obj.time;\n  const date = new Date(obj.date);\n  // const owner = obj.owner;\n  return {\n    name,\n    time,\n    date\n  };\n}\nconst IncomingGroupTests = _ref => {\n  let {\n    groupId\n  } = _ref;\n  const [test, setTest] = useState();\n  const axiosPrivate = useAxiosPrivate();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const now = dayjs();\n  dayjs.extend(relativeTime);\n  dayjs.extend(updateLocale);\n  dayjs.updateLocale(\"pl\");\n  useEffect(() => {\n    let isMounted = true;\n    const controller = new AbortController();\n    let groupIdParam = groupId.current;\n    const getTest = async () => {\n      try {\n        const response = await axiosPrivate.get(\"/test/\" + groupIdParam, {\n          signal: controller.signal,\n          params: {\n            groupId: groupIdParam\n          }\n        });\n        console.log(response);\n        isMounted && setTest(response.data);\n        setTest(response.data.map(row => {\n          return createData(row);\n        }));\n      } catch (err) {\n        console.error(err);\n        navigate(\"/login\", {\n          state: {\n            from: location\n          },\n          replace: true\n        });\n      }\n    };\n    getTest();\n    return () => {\n      isMounted = false;\n      controller.abort();\n    };\n  }, []);\n  useEffect(() => {\n    console.log(test);\n  }, [test]);\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      width: \"100%\",\n      height: \"100%\",\n      mt: 7,\n      mb: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, test && (test === null || test === void 0 ? void 0 : test.length) != 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    sx: {\n      maxWidth: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    sx: {\n      Width: 250\n    },\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, \"Nazwa\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, \"Data\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, test.map((row, i) => /*#__PURE__*/React.createElement(TableRow, {\n    key: i,\n    className: \"groupTableHover\",\n    sx: {\n      \"&:last-child td, &:last-child th\": {\n        border: 0\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, ConvertTime(row.date)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, dayjs(row.date).toNow()))))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Brak test\\xF3w w tej grupie\"));\n};\nexport default IncomingGroupTests;","map":{"version":3,"names":["useState","useEffect","useAxiosPrivate","useNavigate","useLocation","React","Box","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Tooltip","DeleteIcon","dayjs","relativeTime","updateLocale","ConvertTime","date","formatter","Intl","DateTimeFormat","day","month","year","hour","minute","format","createData","obj","name","time","Date","IncomingGroupTests","groupId","test","setTest","axiosPrivate","navigate","location","now","extend","isMounted","controller","AbortController","groupIdParam","current","getTest","response","get","signal","params","console","log","data","map","row","err","error","state","from","replace","abort","display","alignItems","justifyContent","flexDirection","width","height","mt","mb","length","maxWidth","Width","i","border","toNow"],"sources":["C:/Users/kamil/Documents/GitHub/LepszyUPEL/src/IncomingGroupTests.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport useAxiosPrivate from \"./hooks/useAxiosPrivate\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport updateLocale from \"dayjs/plugin/updateLocale\";\r\n\r\nfunction ConvertTime(date) {\r\n  var formatter = new Intl.DateTimeFormat(\"pl\", {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n  });\r\n  return formatter.format(date);\r\n}\r\n\r\nfunction createData(obj) {\r\n  const name = obj.name;\r\n  const time = obj.time;\r\n  const date = new Date(obj.date);\r\n  // const owner = obj.owner;\r\n  return { name, time, date };\r\n}\r\n\r\nconst IncomingGroupTests = ({ groupId }) => {\r\n  const [test, setTest] = useState();\r\n  const axiosPrivate = useAxiosPrivate();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const now = dayjs();\r\n\r\n  dayjs.extend(relativeTime);\r\n  dayjs.extend(updateLocale);\r\n  dayjs.updateLocale(\"pl\");\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const controller = new AbortController();\r\n    let groupIdParam = groupId.current;\r\n    const getTest = async () => {\r\n      try {\r\n        const response = await axiosPrivate.get(\"/test/\" + groupIdParam, {\r\n          signal: controller.signal,\r\n          params: { groupId: groupIdParam },\r\n        });\r\n        console.log(response);\r\n        isMounted && setTest(response.data);\r\n\r\n        setTest(\r\n          response.data.map((row) => {\r\n            return createData(row);\r\n          })\r\n        );\r\n      } catch (err) {\r\n        console.error(err);\r\n        navigate(\"/login\", { state: { from: location }, replace: true });\r\n      }\r\n    };\r\n\r\n    getTest();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      controller.abort();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(test);\r\n  }, [test]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        mt: 7,\r\n        mb: 8,\r\n      }}\r\n    >\r\n      {test && test?.length != 0 ? (\r\n        <>\r\n          <TableContainer component={Paper} sx={{ maxWidth: 500 }}>\r\n            <Table sx={{ Width: 250 }} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Nazwa</TableCell>\r\n                  <TableCell align=\"center\">Data</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {test.map((row, i) => (\r\n                  <TableRow\r\n                    key={i}\r\n                    className=\"groupTableHover\"\r\n                    sx={{\r\n                      \"&:last-child td, &:last-child th\": { border: 0 },\r\n                    }}\r\n                  >\r\n                    <TableCell align=\"left\">{row.name}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {ConvertTime(row.date)}\r\n                    </TableCell>\r\n                    <TableCell>{dayjs(row.date).toNow()}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </>\r\n      ) : (\r\n        <p>Brak testów w tej grupie</p>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default IncomingGroupTests;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}