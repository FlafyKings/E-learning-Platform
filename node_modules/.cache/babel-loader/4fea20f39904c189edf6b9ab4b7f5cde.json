{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamil\\\\Documents\\\\GitHub\\\\LepszyUPEL\\\\src\\\\AddTestPopUp.js\";\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Typography } from \"@mui/material\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport useAxiosPrivate from \"./hooks/useAxiosPrivate\";\nimport { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\nimport { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport moment from \"moment\";\nconst AddTestPopUp = _ref => {\n  let {\n    open,\n    setOpen,\n    groupId,\n    group,\n    setAlert,\n    setAlertType,\n    setAlertMessage\n  } = _ref;\n  const [tests, setTests] = useState();\n  const axiosPrivate = useAxiosPrivate();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [values, setValues] = useState();\n  useEffect(() => {\n    let isMounted = true;\n    const controller = new AbortController();\n    const getTests = async () => {\n      try {\n        const response = await axiosPrivate.get(\"/test/\" + login, JSON.stringify({\n          login\n        }), {\n          signal: controller.signal,\n          params: {\n            login: login\n          }\n        });\n        isMounted && setTests(response.data);\n      } catch (err) {\n        console.error(err);\n        navigate(\"/login\", {\n          state: {\n            from: location\n          },\n          replace: true\n        });\n      }\n    };\n    getTests();\n    return () => {\n      isMounted = false;\n      controller.abort();\n    };\n  }, []);\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n  //   if (group) {\n  //     var result = group.find((item) => item.id == groupId.current)[\n  //       \"students_count\"\n  //     ];\n  //     group.find((item) => item.id == groupId.current)[\"students_count\"] =\n  //       parseInt(result) + values.length;\n  //   }\n  //   let gruopIdCurrent = groupId.current;\n  //   await axiosPrivate\n  //     .post(\"/students\", JSON.stringify({ gruopIdCurrent, values }), {\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //       withCredentials: true,\n  //     })\n  //     .then((response) => {\n  //       console.log(\"Halo\", response);\n  //       setAlert(true);\n  //       setAlertType(\"success\");\n  //       setAlertMessage(\"Dodano studenta do grupy!\");\n  //       setOpen(false);\n  //     })\n  //     .catch((error) => {\n  //       //Error handling\n  //       if (error.response) {\n  //         //The client was given an error response\n\n  //         if (!error.response.data.type) {\n  //           if (error.response.status >= 400) {\n  //             console.log(\"error\");\n  //           } else if (error.response.status >= 200) {\n  //             console.log(\"error\");\n  //           }\n  //         } else {\n  //           console.log(\"error\");\n  //         }\n  //         console.log(error.response.data);\n  //         console.log(error.response.status);\n  //         console.log(error.response.headers);\n  //       } else if (error.request) {\n  //         console.log(error.request);\n  //       } else {\n  //         //Other errors\n  //         console.log(\"Error\", error.message);\n  //       }\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   let isMounted = true;\n  //   const controller = new AbortController();\n\n  //   const getStudents = async () => {\n  //     let gruopIdCurrent = groupId.current;\n  //     try {\n  //       const response = await axiosPrivate.get(\n  //         \"/students/\" + gruopIdCurrent,\n  //         JSON.stringify({ gruopIdCurrent }),\n  //         {\n  //           signal: controller.signal,\n  //           params: { groupId: gruopIdCurrent },\n  //         }\n  //       );\n  //       isMounted && setStudents(response.data);\n  //     } catch (err) {\n  //       console.error(err);\n  //       navigate(\"/login\", { state: { from: location }, replace: true });\n  //     }\n  //   };\n\n  //   getStudents();\n\n  //   return () => {\n  //     isMounted = false;\n  //     controller.abort();\n  //   };\n  // }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    component: \"form\",\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    sx: {\n      color: \"rgba(0, 0, 0, 0.6)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"Dodaj test do grupy\"), /*#__PURE__*/React.createElement(DialogContent, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: 2,\n      justifyContent: \"center\",\n      alignItems: \"left\",\n      minWidth: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    textAlign: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Wybierz date oraz test kt\\xF3ry chcesz doda\\u0107\"), tests ? /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    options: tests,\n    onChange: (event, value) => setValues(value),\n    getOptionLabel: option => option.name ? option.name : \"\",\n    filterSelectedOptions: true,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Wybierz test\",\n      placeholder: \"Testy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, \"Zamknij\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"Dodaj test\"))));\n};\nexport default AddTestPopUp;","map":{"version":3,"names":["React","Button","Dialog","DialogActions","DialogContent","DialogTitle","useState","useEffect","useNavigate","useLocation","Typography","Autocomplete","TextField","useAxiosPrivate","DesktopDatePicker","MobileDatePicker","LocalizationProvider","moment","AddTestPopUp","open","setOpen","groupId","group","setAlert","setAlertType","setAlertMessage","tests","setTests","axiosPrivate","navigate","location","values","setValues","isMounted","controller","AbortController","getTests","response","get","login","JSON","stringify","signal","params","data","err","console","error","state","from","replace","abort","handleClose","color","display","flexDirection","gap","justifyContent","alignItems","minWidth","event","value","option","name"],"sources":["C:/Users/kamil/Documents/GitHub/LepszyUPEL/src/AddTestPopUp.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport useAxiosPrivate from \"./hooks/useAxiosPrivate\";\r\nimport { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\r\nimport { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport moment from \"moment\";\r\n\r\nconst AddTestPopUp = ({\r\n  open,\r\n  setOpen,\r\n  groupId,\r\n  group,\r\n  setAlert,\r\n  setAlertType,\r\n  setAlertMessage,\r\n}) => {\r\n  const [tests, setTests] = useState();\r\n  const axiosPrivate = useAxiosPrivate();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [values, setValues] = useState();\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const controller = new AbortController();\r\n\r\n    const getTests = async () => {\r\n      try {\r\n        const response = await axiosPrivate.get(\r\n          \"/test/\" + login,\r\n          JSON.stringify({ login }),\r\n          {\r\n            signal: controller.signal,\r\n            params: { login: login },\r\n          }\r\n        );\r\n        isMounted && setTests(response.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        navigate(\"/login\", { state: { from: location }, replace: true });\r\n      }\r\n    };\r\n\r\n    getTests();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      controller.abort();\r\n    };\r\n  }, []);\r\n\r\n  // const handleSubmit = async (event) => {\r\n  //   event.preventDefault();\r\n  //   if (group) {\r\n  //     var result = group.find((item) => item.id == groupId.current)[\r\n  //       \"students_count\"\r\n  //     ];\r\n  //     group.find((item) => item.id == groupId.current)[\"students_count\"] =\r\n  //       parseInt(result) + values.length;\r\n  //   }\r\n  //   let gruopIdCurrent = groupId.current;\r\n  //   await axiosPrivate\r\n  //     .post(\"/students\", JSON.stringify({ gruopIdCurrent, values }), {\r\n  //       headers: { \"Content-Type\": \"application/json\" },\r\n  //       withCredentials: true,\r\n  //     })\r\n  //     .then((response) => {\r\n  //       console.log(\"Halo\", response);\r\n  //       setAlert(true);\r\n  //       setAlertType(\"success\");\r\n  //       setAlertMessage(\"Dodano studenta do grupy!\");\r\n  //       setOpen(false);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       //Error handling\r\n  //       if (error.response) {\r\n  //         //The client was given an error response\r\n\r\n  //         if (!error.response.data.type) {\r\n  //           if (error.response.status >= 400) {\r\n  //             console.log(\"error\");\r\n  //           } else if (error.response.status >= 200) {\r\n  //             console.log(\"error\");\r\n  //           }\r\n  //         } else {\r\n  //           console.log(\"error\");\r\n  //         }\r\n  //         console.log(error.response.data);\r\n  //         console.log(error.response.status);\r\n  //         console.log(error.response.headers);\r\n  //       } else if (error.request) {\r\n  //         console.log(error.request);\r\n  //       } else {\r\n  //         //Other errors\r\n  //         console.log(\"Error\", error.message);\r\n  //       }\r\n  //     });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   let isMounted = true;\r\n  //   const controller = new AbortController();\r\n\r\n  //   const getStudents = async () => {\r\n  //     let gruopIdCurrent = groupId.current;\r\n  //     try {\r\n  //       const response = await axiosPrivate.get(\r\n  //         \"/students/\" + gruopIdCurrent,\r\n  //         JSON.stringify({ gruopIdCurrent }),\r\n  //         {\r\n  //           signal: controller.signal,\r\n  //           params: { groupId: gruopIdCurrent },\r\n  //         }\r\n  //       );\r\n  //       isMounted && setStudents(response.data);\r\n  //     } catch (err) {\r\n  //       console.error(err);\r\n  //       navigate(\"/login\", { state: { from: location }, replace: true });\r\n  //     }\r\n  //   };\r\n\r\n  //   getStudents();\r\n\r\n  //   return () => {\r\n  //     isMounted = false;\r\n  //     controller.abort();\r\n  //   };\r\n  // }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog component=\"form\" open={open} onClose={handleClose}>\r\n        <DialogTitle sx={{ color: \"rgba(0, 0, 0, 0.6)\" }}>\r\n          Dodaj test do grupy\r\n        </DialogTitle>\r\n        <DialogContent\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: 2,\r\n            justifyContent: \"center\",\r\n            alignItems: \"left\",\r\n            minWidth: 400,\r\n          }}\r\n        >\r\n          <Typography textAlign=\"left\">\r\n            Wybierz date oraz test który chcesz dodać\r\n          </Typography>\r\n          {tests ? (\r\n            <Autocomplete\r\n              multiple\r\n              options={tests}\r\n              onChange={(event, value) => setValues(value)}\r\n              getOptionLabel={(option) => (option.name ? option.name : \"\")}\r\n              filterSelectedOptions\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Wybierz test\"\r\n                  placeholder=\"Testy\"\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Zamknij</Button>\r\n          <Button>Dodaj test</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTestPopUp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}